global
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon
    maxconn 4096
    pidfile /var/run/haproxy.pid

defaults
    mode tcp
    timeout connect 5s
    timeout client 1m
    timeout server 1m
    option redispatch
    balance roundrobin

listen stats :1936
    mode http
    stats enable
    stats hide-version
    stats uri /
    <% if @server.basic_auth %>
    stats realm Haproxy\ Statistics
    stats auth <%= @server.basic_auth %>
    <% end %>

<% @all_ports.each_pair do |port, applications| %>
frontend http-in
	bind *:<%= port %>

	# Define hosts
	<% applications.each do |application| %>
	<% application.domains.each do |domain| %>
	acl host_<%= application.name.downcase.parameterize %>_<%= port %> -i <%= domain %>
	<% end %>
	<% end %>

	## figure out which one to use
	<% applications.each do |application| %>
	use_backend <%= application.name.downcase.parameterize %>_<%= port %>_cluster if host_<%= application.name.downcase.parameterize %>_<%= port %>
	<% end %>
<% end %>

<% @all_ports.each_pair do |port, applications| %>
<% applications.each do |application|
image_name = @image_on_port[port][application.id.to_s].split(':').first
image = application.images.where(name: image_name).first
container = @server.containers.where(image: image).first
server_containers = @server.server_containers.where(container: container)
%>
backend <%= application.name.downcase.parameterize %>_<%= port %>_cluster
	balance leastconn
	option httpclose
	option forwardfor

	<% if application.basic_auth %>
	stats realm Haproxy\ Statistics
	stats auth <%= application.basic_auth %>
	<% end %>

	<% server_containers.each do |server_container| %>
	server <%= server_container.id.to_s %> <%= server_container.ip %>:<%= @target_ports[port][application.id.to_s] %> check inter 2s rise 3 fall 2
	<% end %>
<% end %>
<% end %>
